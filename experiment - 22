#include <stdio.h>

int main() {
    int m, n;

    printf("Enter number of memory blocks: ");
    scanf("%d", &m);
    int blockSize[m];
    printf("Enter sizes of each block:\n");
    for (int i = 0; i < m; i++)
        scanf("%d", &blockSize[i]);

    printf("Enter number of processes: ");
    scanf("%d", &n);
    int processSize[n];
    printf("Enter sizes of each process:\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &processSize[i]);

    int allocation[n]; // To store block allocation for each process
    for (int i = 0; i < n; i++)
        allocation[i] = -1;

    // Worst Fit allocation
    for (int i = 0; i < n; i++) {
        int wIndex = -1;
        for (int j = 0; j < m; j++) {
            if (blockSize[j] >= processSize[i]) {
                if (wIndex == -1 || blockSize[j] > blockSize[wIndex])
                    wIndex = j;
            }
        }
        if (wIndex != -1) {
            allocation[i] = wIndex;
            blockSize[wIndex] -= processSize[i];
        }
    }

    // Display results
    printf("\nProcess No.\tProcess Size\tBlock No.\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t", i+1, processSize[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i]+1);
        else
            printf("Not Allocated\n");
    }

    return 0;
}
